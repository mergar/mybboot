autoboot_delay="10"

if_bnxt_load="YES"
if_qlnxe_load="YES"

# /usr/ports/net/realtek-re-kmod
if_re_load="YES"
if_re_name="/boot/modules/if_re.ko"

loader_menu_title="BSDBoot firmware"

aesni_load="YES"
ipfw_load="YES"
net.inet.ip.fw.default_to_accept=1

kern.ipc.semmnu=120
kern.ipc.semume=40
kern.ipc.semmns=240
kern.ipc.semmni=40
kern.ipc.shmmaxpgs=65536

net.inet.tcp.syncache.hashsize=1024
net.inet.tcp.syncache.bucketlimit=512
net.inet.tcp.syncache.cachelimit=65536
net.inet.tcp.hostcache.hashsize=16384
net.inet.tcp.hostcache.bucketlimit=100
net.inet.tcp.hostcache.cachelimit=65536

kern.nbuf=128000
net.inet.tcp.tcbhashsize=524288
net.inet.tcp.hostcache.bucketlimit=120
net.inet.tcp.tcbhashsize=131072

vm.pmap.pti="0"
hw.ibrs_disable="1"
crypto_load="YES"

### Use next-gen MRSAS drivers in place of MFI for device supporting it
# This solves lot of [mfi] COMMAND 0x... TIMEOUT AFTER ## SECONDS
hw.mfi.mrsas_enable="1"

### Tune some global values ###
hw.usb.no_pf="1"        # Disable USB packet filtering

hw.igb.rx_process_limit="-1"
hw.em.rx_process_limit="-1"
hw.ix.rx_process_limit="-1"
# Allow unsupported SFP
hw.ix.unsupported_sfp="1"
hw.ix.allow_unsupported_sfp="1"

### Chelsio NIC tuning ###
# Prevent to reserve ASIC ressources unused on a router/firewall,
# improve performance when we will reach 10Mpps or more
hw.cxgbe.toecaps_allowed="0"
hw.cxgbe.rdmacaps_allowed="0"
hw.cxgbe.iscsicaps_allowed="0"
hw.cxgbe.fcoecaps_allowed="0"

# Under network heavy usage, network critical traffic (mainly
# non-RSS traffic like ARP, LACP) could be droped and flaping LACP links.
# To mitigate this situation, Chelsio could reserves one TX queue for
# non-RSS traffic with this tuneable:
# hw.cxgbe.rsrv_noflowq="1"
# But compensate the number of TX queue by increasing it by one.
# As example, if you had 8 queues, uses now 9:
# hw.cxgbe.ntxq="9"

### link tunning ###
# Increase interface send queue length
# lagg user: This value should be at minimum the sum of txd buffer of each NIC in the lagg
# hw.ix.txd: 2048 by default, then use x4 here (lagg with 4 members)
net.link.ifqmaxlen="16384"

# Avoid message netisr_register: epair requested queue limit 688128 capped to net.isr.maxqlimit 1024
net.isr.maxqlimit=1000000

# Use all cores for netisr processing
net.isr.maxthreads=-1
